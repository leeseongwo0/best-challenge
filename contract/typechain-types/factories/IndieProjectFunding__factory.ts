/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  IndieProjectFunding,
  IndieProjectFundingInterface,
} from "../IndieProjectFunding";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectIndex",
        type: "uint256",
      },
    ],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectIndex",
        type: "uint256",
      },
    ],
    name: "getProject",
    outputs: [
      {
        internalType: "uint256",
        name: "totalGT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "teamEthBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "GTBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "proposalTitle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_requiredEth",
        type: "uint256",
      },
    ],
    name: "startFunding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approve",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114d8806100206000396000f3fe60806040526004361061007b5760003560e01c8063775c46cd1161004e578063775c46cd14610126578063a3cd476a1461014f578063c1cbbca714610178578063f0f3f2c8146101945761007b565b80631ab7671214610080578063224d5dd2146100a957806336fbad26146100d25780636a18ff7a146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906109ef565b6101d5565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190610a8d565b610328565b005b3480156100de57600080fd5b506100e76103d2565b6040516100f49190610ac9565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190610b1c565b6103d8565b005b34801561013257600080fd5b5061014d600480360381019061014891906109ef565b610654565b005b34801561015b57600080fd5b5061017660048036038101906101719190610cb5565b610697565b005b610192600480360381019061018d9190610d24565b6107e6565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190610d24565b610926565b6040516101cc959493929190610d60565b60405180910390f35b60008060008481526020019081526020016000209050600081600101600601600084815260200190815260200160002090508060040160009054906101000a900460ff1615610259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025090610e36565b60405180910390fd5b806003015481600201541115610305578160010160010160000154816001015411156102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610ec8565b60405180910390fd5b80600101548260010160000160000160008282546102d89190610f17565b9250508190555080600101548260010160010160000160008282546102fd9190610f4b565b925050819055505b60018160040160006101000a81548160ff02191690831515021790555050505050565b6001600081548092919061033b90610f7f565b919050555060008060006001548152602001908152602001600020600101905060008160000160000181905550818160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006001548152602001908152602001600020905060008160000181905550505050565b60015481565b600080600085815260200190815260200160002090506000816001016006016000858152602001908152602001600020905060008260010160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611013565b60405180910390fd5b8060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051a9061107f565b60405180910390fd5b8215610590578160010160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548160020160008282546105849190610f17565b925050819055506105f3565b8160010160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548160030160008282546105eb9190610f17565b925050819055505b60018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050565b60008060008481526020019081526020016000209050600a82610677919061109f565b816000018190555080600001548160010160010160010181905550505050565b600080600085815260200190815260200160002090508060010160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610742576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107399061112d565b60405180910390fd5b600081600101600501600081548092919061075c90610f7f565b91905055905083826001016006016000838152602001908152602001600020600001908161078a9190611364565b508282600101600601600083815260200190815260200160002060010181905550600082600101600601600083815260200190815260200160002060040160006101000a81548160ff0219169083151502179055505050505050565b600080600083815260200190815260200160002090506000341161083f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083690611482565b60405180910390fd5b348160010160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546108969190610f17565b925050819055506000349050808260010160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546108f99190610f17565b925050819055503482600101600101600001600082825461091a9190610f17565b92505081905550505050565b600080600080600080600080888152602001908152602001600020905080600001548160010160000160000154826001016001016000015483600101600101600101548460010160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955095509550955095505091939590929450565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6109cc816109b9565b81146109d757600080fd5b50565b6000813590506109e9816109c3565b92915050565b60008060408385031215610a0657610a056109af565b5b6000610a14858286016109da565b9250506020610a25858286016109da565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5a82610a2f565b9050919050565b610a6a81610a4f565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa26109af565b5b6000610ab184828501610a78565b91505092915050565b610ac3816109b9565b82525050565b6000602082019050610ade6000830184610aba565b92915050565b60008115159050919050565b610af981610ae4565b8114610b0457600080fd5b50565b600081359050610b1681610af0565b92915050565b600080600060608486031215610b3557610b346109af565b5b6000610b43868287016109da565b9350506020610b54868287016109da565b9250506040610b6586828701610b07565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bc282610b79565b810181811067ffffffffffffffff82111715610be157610be0610b8a565b5b80604052505050565b6000610bf46109a5565b9050610c008282610bb9565b919050565b600067ffffffffffffffff821115610c2057610c1f610b8a565b5b610c2982610b79565b9050602081019050919050565b82818337600083830152505050565b6000610c58610c5384610c05565b610bea565b905082815260208101848484011115610c7457610c73610b74565b5b610c7f848285610c36565b509392505050565b600082601f830112610c9c57610c9b610b6f565b5b8135610cac848260208601610c45565b91505092915050565b600080600060608486031215610cce57610ccd6109af565b5b6000610cdc868287016109da565b935050602084013567ffffffffffffffff811115610cfd57610cfc6109b4565b5b610d0986828701610c87565b9250506040610d1a868287016109da565b9150509250925092565b600060208284031215610d3a57610d396109af565b5b6000610d48848285016109da565b91505092915050565b610d5a81610a4f565b82525050565b600060a082019050610d756000830188610aba565b610d826020830187610aba565b610d8f6040830186610aba565b610d9c6060830185610aba565b610da96080830184610d51565b9695505050505050565b600082825260208201905092915050565b7f50726f706f73616c2068617320616c7265616479206265656e2065786563757460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e20602283610db3565b9150610e2b82610dc4565b604082019050919050565b60006020820190508181036000830152610e4f81610e13565b9050919050565b7f4e6f7420656e6f7567682066756e647320696e20676f7665726e616e6365207660008201527f61756c7400000000000000000000000000000000000000000000000000000000602082015250565b6000610eb2602483610db3565b9150610ebd82610e56565b604082019050919050565b60006020820190508181036000830152610ee181610ea5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f22826109b9565b9150610f2d836109b9565b9250828201905080821115610f4557610f44610ee8565b5b92915050565b6000610f56826109b9565b9150610f61836109b9565b9250828203905081811115610f7957610f78610ee8565b5b92915050565b6000610f8a826109b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fbc57610fbb610ee8565b5b600182019050919050565b7f596f7520617265206e6f74206120737570706f72746572000000000000000000600082015250565b6000610ffd601783610db3565b915061100882610fc7565b602082019050919050565b6000602082019050818103600083015261102c81610ff0565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000611069601683610db3565b915061107482611033565b602082019050919050565b600060208201905081810360008301526110988161105c565b9050919050565b60006110aa826109b9565b91506110b5836109b9565b92508282026110c3816109b9565b915082820484148315176110da576110d9610ee8565b5b5092915050565b7f4f6e6c79207468652063726561746f722063616e2070726f706f736500000000600082015250565b6000611117601c83610db3565b9150611122826110e1565b602082019050919050565b600060208201905081810360008301526111468161110a565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061119f57607f821691505b6020821081036111b2576111b1611158565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261121a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111dd565b61122486836111dd565b95508019841693508086168417925050509392505050565b6000819050919050565b600061126161125c611257846109b9565b61123c565b6109b9565b9050919050565b6000819050919050565b61127b83611246565b61128f61128782611268565b8484546111ea565b825550505050565b600090565b6112a4611297565b6112af818484611272565b505050565b5b818110156112d3576112c860008261129c565b6001810190506112b5565b5050565b601f821115611318576112e9816111b8565b6112f2846111cd565b81016020851015611301578190505b61131561130d856111cd565b8301826112b4565b50505b505050565b600082821c905092915050565b600061133b6000198460080261131d565b1980831691505092915050565b6000611354838361132a565b9150826002028217905092915050565b61136d8261114d565b67ffffffffffffffff81111561138657611385610b8a565b5b6113908254611187565b61139b8282856112d7565b600060209050601f8311600181146113ce57600084156113bc578287015190505b6113c68582611348565b86555061142e565b601f1984166113dc866111b8565b60005b82811015611404578489015182556001820191506020850194506020810190506113df565b86831015611421578489015161141d601f89168261132a565b8355505b6001600288020188555050505b505050505050565b7f596f75206d7573742073656e6420736f6d652045746865720000000000000000600082015250565b600061146c601883610db3565b915061147782611436565b602082019050919050565b6000602082019050818103600083015261149b8161145f565b905091905056fea2646970667358221220ff98ffeff433f38bfb7a1a95744c531ba4f9f013e43d0c5e0ea721e601395d3664736f6c63430008180033";

type IndieProjectFundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndieProjectFundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndieProjectFunding__factory extends ContractFactory {
  constructor(...args: IndieProjectFundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IndieProjectFunding & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): IndieProjectFunding__factory {
    return super.connect(runner) as IndieProjectFunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndieProjectFundingInterface {
    return new Interface(_abi) as IndieProjectFundingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IndieProjectFunding {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IndieProjectFunding;
  }
}
